{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","alt","src","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","console","log","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAgBhD,OACE,0BAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,OAMd,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAfhB,SAACP,GAEzBF,EAAcE,EAAEQ,OAAOF,Y,uBCPdG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,4DAEJ,mCAELC,EAJS,gDAIsCC,UAAUH,GAJhD,oBAEJ,mCAFI,sBAKII,MAAMF,GALV,cAKTG,EALS,gBAMMA,EAAKC,OANX,uBAMRC,EANQ,EAMRA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZ3B,kBAeRM,GAfQ,4CAAH,sDCCPO,EAAc,SAAC,GAAW,IAAVL,EAAS,EAATA,IAGzB,OACI,yBAAKM,UAAY,0CACb,yBACAC,IAAOP,EAAIE,MACXM,IAAKR,EAAIR,MACT,2BAAIQ,EAAIE,SCNPO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAEbd,mBAAS,CAChCqB,KAAM,GACNa,SAAS,IAJ2B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAmBvC,OAZIC,qBAAU,WACTxB,EAAQC,GACPwB,MAAK,SAAAC,GAEFH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAIhB,CAACpB,IAEEqB,EDhB0BK,CAAa1B,GAAhCa,EAFsB,EAE5BN,KAAca,EAFc,EAEdA,QAMrB,OAJAO,QAAQC,IAAIf,GACZc,QAAQC,IAAIR,GAIR,oCACA,wBAAIJ,UAAY,0CAA0ChB,GAC1D,yBAAKgB,UAAU,aACTI,GAAW,WAEPP,EAAOJ,KAAI,SAACC,GACR,OAAO,kBAAC,EAAD,CACGmB,IAAOnB,EAAIC,GACXD,IAAOA,UEjB1BoB,EAAc,WAAO,MAGM5C,mBAAS,CAAC,cAHhB,mBAGvB6C,EAHuB,KAGX9C,EAHW,KAS9B,OACI,6BACI,4CACA,6BACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,4BAEM8C,EAAWtB,KAAI,SAACT,GACZ,OAAO,kBAAC,EAAD,CACP6B,IAAO7B,EACPA,SAAUA,U,MCjBhCgC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d07bd154.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleImputChange = (e) => {\r\n    //console.log(e.target.value);\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 0) {\r\n      setCategories((cate) => [inputValue, ...cate]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleImputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n};\r\n","\r\nexport const getGifs = async(category) => {\r\n\r\n    const apiKey = 'Ef2Qj1QKRQpwvBTkyW5EDFk8xZgeERqM';\r\n\r\n        const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=${apiKey}&limit=10`;\r\n        const resp = await fetch(url);\r\n        const {data} = await resp.json();\r\n        \r\n        const gifs = data.map(img =>{\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n        return gifs;\r\n}\r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ({img}) => {\r\n\r\n\r\n    return (\r\n        <div className = \"card animate__animated animate__fadeIn\">\r\n            <img \r\n            alt = {img.title}\r\n            src={img.url} />\r\n            <p>{img.title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport {GifGridItem} from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data: images, loading} = useFetchGifs(category);\r\n\r\n    console.log(images);\r\n    console.log(loading);\r\n\r\n    \r\n    return (\r\n        <>\r\n        <h3 className = \"card animate__animated animate__fadeIn\">{category}</h3>\r\n        <div className=\"card-grid\">\r\n            { loading && 'Cargando'}\r\n            {\r\n                  images.map((img) =>{\r\n                      return <GifGridItem \r\n                                key = {img.id}\r\n                                img = {img}/>\r\n                  })\r\n                }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n   const [state, setstate] = useState({\r\n      data: [],\r\n      loading: true\r\n   });\r\n\r\n       useEffect(()=>{\r\n        getGifs(category)\r\n        .then(imgs =>{\r\n\r\n            setstate({\r\n              data: imgs,\r\n              loading: false\r\n           });\r\n           \r\n        });\r\n    }, [category]);\r\n   \r\n   return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport {AddCategory} from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp =() =>  {\r\n\r\n    //const categories = ['One punch', 'Samurai X', 'DragÃ³n ball'];\r\n    const [categories, setCategories] = useState(['Samurai X']);\r\n\r\n    // const handleAdd = () =>{\r\n    //     setCategories(['Hunter Hunter',...categories]);\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h2>GitExpertApp</h2>\r\n            <hr/>\r\n            <AddCategory setCategories={setCategories} />\r\n            <ol>\r\n              {\r\n                  categories.map((category) =>{\r\n                      return <GifGrid \r\n                      key = {category}\r\n                      category={category} />\r\n                  })\r\n              }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}